^(\[\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d\.\d{3}\+\d{4}\])?\[(\d+\.\d+\w+)\]\[(\w+ ?)\]\[gc(\w+,?){0,2}\s*\] GC\(\d+\) Pause Young(?: \([\w ]*?\)){1,3} (\d+\w->\d+\w\(?\d+?\w?\)?) (\d+.\w+)
^(\[\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d\.\d{3}\+\d{4}\])?\[(\d+\.\d+\w+)\]\[(\w+ ?)\]\[gc(\w+,?){0,2}\s*\] GC\(\d+\)  GC\(\d+\) Pause Young.*(\d+\w->\d+\w\(?.*\)?) (\d+.\w+)\s*
   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(argsort)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(array_equal)
        3    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(atleast_2d)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(can_cast)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(concatenate)
       13    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(delete)
        5    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(ndim)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(prod)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
        1    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(vstack)
       28    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:1033(_handle_fromlist)
        1    0.001    0.001    3.979    3.979 <string>:1(<module>)
        7    0.000    0.000    0.000    0.000 _asarray.py:110(asanyarray)
    57/53    0.000    0.000    0.000    0.000 _asarray.py:23(asarray)
       12    0.000    0.000    0.000    0.000 _asarray.py:293(require)
       12    0.000    0.000    0.000    0.000 _asarray.py:382(<setcomp>)
        2    0.000    0.000    0.000    0.000 _bootlocale.py:33(getpreferredencoding)
       37    0.000    0.000    0.000    0.000 _dtype.py:24(_kind_name)
       37    0.000    0.000    0.000    0.000 _dtype.py:307(_name_includes_bit_suffix)
       37    0.000    0.000    0.000    0.000 _dtype.py:321(_name_get)
        3    0.000    0.000    0.000    0.000 _methods.py:37(_amax)
        3    0.000    0.000    0.000    0.000 _methods.py:45(_sum)
        9    0.000    0.000    0.000    0.000 _methods.py:53(_any)
        1    0.000    0.000    0.000    0.000 _methods.py:59(_all)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:132(geterr)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:32(seterr)
       11    0.000    0.000    0.000    0.000 _ufunc_config.py:429(__init__)
       11    0.000    0.000    0.000    0.000 _ufunc_config.py:433(__enter__)
       11    0.000    0.000    0.000    0.000 _ufunc_config.py:438(__exit__)
        5    0.000    0.000    0.000    0.000 _validators.py:208(validate_bool_kwarg)
       60    0.000    0.000    0.000    0.000 abc.py:96(__instancecheck__)
        6    0.000    0.000    0.000    0.000 algorithms.py:1534(_get_take_nd_function)
        2    0.000    0.000    0.000    0.000 algorithms.py:1570(take)
        6    0.000    0.000    0.000    0.000 algorithms.py:1661(take_nd)
        1    0.000    0.000    0.000    0.000 algorithms.py:188(_reconstruct_data)
        1    0.000    0.000    0.000    0.000 algorithms.py:231(_ensure_arraylike)
        1    0.000    0.000    0.000    0.000 algorithms.py:256(_get_hashtable_algo)
        1    0.000    0.000    0.000    0.000 algorithms.py:291(_check_object_for_strings)
        1    0.000    0.000    0.000    0.000 algorithms.py:319(unique)
        1    0.000    0.000    0.000    0.000 algorithms.py:73(_ensure_data)
        1    0.000    0.000    0.000    0.000 array_ops.py:118(_na_arithmetic_op)
        1    0.000    0.000    0.000    0.000 array_ops.py:194(comparison_op)
        1    0.000    0.000    0.000    0.000 arraylike.py:43(__gt__)
        1    0.000    0.000    0.000    0.000 base.py:1037(unique)
        1    0.000    0.000    0.000    0.000 base.py:1051(nunique)
        3    0.000    0.000    0.000    0.000 base.py:1232(name)
        1    0.000    0.000    0.000    0.000 base.py:1239(name)
        1    0.000    0.000    0.000    0.000 base.py:1764(is_unique)
        4    0.000    0.000    0.000    0.000 base.py:1875(is_floating)
       24    0.000    0.000    0.000    0.000 base.py:199(construct_from_string)
        1    0.000    0.000    0.000    0.000 base.py:2127(inferred_type)
        2    0.000    0.000    0.000    0.000 base.py:2134(_is_all_dates)
      6/2    0.000    0.000    0.000    0.000 base.py:250(__new__)
      150    0.000    0.000    0.000    0.000 base.py:254(is_dtype)
        4    0.000    0.000    0.000    0.000 base.py:3036(get_loc)
        1    0.000    0.000    0.000    0.000 base.py:3304(_get_partial_string_timestamp_match_key)
        4    0.000    0.000    0.000    0.000 base.py:381(<genexpr>)
       10    0.000    0.000    0.000    0.000 base.py:4070(_values)
        1    0.000    0.000    0.000    0.000 base.py:4096(_get_engine_target)
      118    0.000    0.000    0.000    0.000 base.py:411(find)
        6    0.000    0.000    0.000    0.000 base.py:4230(__contains__)
        5    0.000    0.000    0.000    0.000 base.py:425(_simple_new)
       11    0.000    0.000    0.000    0.000 base.py:4279(__getitem__)
        3    0.000    0.000    0.000    0.000 base.py:4393(equals)
        3    0.000    0.000    0.000    0.000 base.py:510(_shallow_copy)
        4    0.000    0.000    0.000    0.000 base.py:5287(_maybe_cast_indexer)
        3    0.000    0.000    0.000    0.000 base.py:532(is_)
        6    0.000    0.000    0.000    0.000 base.py:563(_reset_identity)
        1    0.000    0.000    0.000    0.000 base.py:574(_engine)
        1    0.000    0.000    0.000    0.000 base.py:581(<lambda>)
       22    0.000    0.000    0.000    0.000 base.py:5836(ensure_index)
        1    0.000    0.000    0.000    0.000 base.py:5947(default_index)
       13    0.000    0.000    0.000    0.000 base.py:5953(maybe_extract_name)
        2    0.000    0.000    0.000    0.000 base.py:5969(_maybe_cast_with_dtype)
       35    0.000    0.000    0.000    0.000 base.py:600(__len__)
        2    0.000    0.000    0.000    0.000 base.py:6023(_maybe_cast_data_without_dtype)
        3    0.000    0.000    0.000    0.000 base.py:623(dtype)
        2    0.000    0.000    0.000    0.000 base.py:742(take)
        2    0.000    0.000    0.000    0.000 base.py:756(_maybe_disallow_fill)
        2    0.000    0.000    0.000    0.000 base.py:81(_reset_cache)
        2    0.000    0.000    0.000    0.000 base.py:846(_map_values)
       31    0.000    0.000    0.000    0.000 blocks.py:127(__init__)
        3    0.000    0.000    0.000    0.000 blocks.py:1378(take_nd)
       23    0.000    0.000    0.000    0.000 blocks.py:147(_maybe_coerce_values)
       31    0.000    0.000    0.000    0.000 blocks.py:161(_check_ndim)
        8    0.000    0.000    0.000    0.000 blocks.py:202(_consolidate_key)
        1    0.000    0.000    0.000    0.000 blocks.py:2080(_can_hold_element)
        1    0.000    0.000    0.000    0.000 blocks.py:2145(_can_hold_element)
        5    0.000    0.000    0.000    0.000 blocks.py:233(internal_values)
        3    0.000    0.000    0.000    0.000 blocks.py:239(array_values)
        8    0.000    0.000    0.000    0.000 blocks.py:2515(_maybe_coerce_values)
        1    0.000    0.000    0.000    0.000 blocks.py:2602(_can_hold_element)
        1    0.000    0.000    0.000    0.000 blocks.py:2605(replace)
        3    0.000    0.000    0.000    0.000 blocks.py:261(fill_value)
        1    0.000    0.000    0.000    0.000 blocks.py:2624(_should_use_regex)
       85    0.000    0.000    0.000    0.000 blocks.py:265(mgr_locs)
       26    0.000    0.000    0.001    0.000 blocks.py:2672(get_block_type)
       36    0.000    0.000    0.000    0.000 blocks.py:269(mgr_locs)
       19    0.000    0.000    0.001    0.000 blocks.py:2721(make_block)
       15    0.000    0.000    0.000    0.000 blocks.py:2748(extend_blocks)
        9    0.000    0.000    0.000    0.000 blocks.py:276(make_block)
       12    0.000    0.000    0.000    0.000 blocks.py:288(make_block_same_class)
        2    0.000    0.000    0.000    0.000 blocks.py:308(__len__)
        1    0.000    0.000    0.000    0.000 blocks.py:319(_slice)
        6    0.000    0.000    0.000    0.000 blocks.py:343(shape)
       45    0.000    0.000    0.000    0.000 blocks.py:347(dtype)
       16    0.000    0.000    0.000    0.000 blocks.py:351(iget)
        2    0.000    0.000    0.000    0.000 blocks.py:365(delete)
        6    0.000    0.000    0.000    0.000 blocks.py:372(apply)
        3    0.000    0.000    0.000    0.000 blocks.py:382(reduce)
        6    0.000    0.000    0.000    0.000 blocks.py:403(_split_op_result)
        3    0.000    0.000    0.000    0.000 blocks.py:592(astype)
        2    0.000    0.000    0.000    0.000 blocks.py:719(should_store)
        6    0.000    0.000    0.000    0.000 blocks.py:752(copy)
        3    0.000    0.000    0.000    0.000 blocks.py:759(replace)
        7    0.000    0.000    0.000    0.000 cast.py:109(maybe_convert_platform)
        5    0.000    0.000    0.000    0.000 cast.py:1257(maybe_castable)
        7    0.000    0.000    0.000    0.000 cast.py:1273(maybe_infer_to_datetimelike)
        8    0.000    0.000    0.000    0.000 cast.py:1379(maybe_cast_to_datetime)
        1    0.000    0.000    0.000    0.000 cast.py:1517(find_common_type)
        3    0.000    0.000    0.000    0.000 cast.py:1541(<genexpr>)
       10    0.000    0.000    0.000    0.000 cast.py:1617(construct_1d_object_array_from_listlike)
        2    0.000    0.000    0.000    0.000 cast.py:1642(construct_1d_ndarray_preserving_na)
        1    0.000    0.000    0.000    0.000 cast.py:1677(maybe_cast_to_integer_array)
        1    0.000    0.000    0.000    0.000 cast.py:1749(convert_scalar_for_putitemlike)
        1    0.000    0.000    0.000    0.000 cast.py:1780(validate_numeric_casting)
        2    0.000    0.000    0.000    0.000 cast.py:542(maybe_promote)
        2    0.000    0.000    0.000    0.000 cast.py:698(_ensure_dtype_type)
        1    0.000    0.000    0.000    0.000 cast.py:840(infer_dtype_from_array)
        2    0.000    0.000    0.000    0.000 cast.py:896(maybe_infer_dtype_type)
        2    0.000    0.000    0.000    0.000 codecs.py:260(__init__)
        2    0.000    0.000    0.000    0.000 codecs.py:309(__init__)
     1000    0.001    0.000    0.002    0.000 codecs.py:319(decode)
        2    0.000    0.000    0.000    0.000 common.py:1071(is_numeric_v_string_like)
        8    0.000    0.000    0.000    0.000 common.py:1187(needs_i8_conversion)
        2    0.000    0.000    0.000    0.000 common.py:1234(is_numeric_dtype)
        5    0.000    0.000    0.000    0.000 common.py:1276(is_string_like_dtype)
       14    0.000    0.000    0.000    0.000 common.py:129(cast_scalar_indexer)
        5    0.000    0.000    0.000    0.000 common.py:1304(<lambda>)
       11    0.000    0.000    0.000    0.000 common.py:1307(is_float_dtype)
       16    0.000    0.000    0.000    0.000 common.py:1341(is_bool_dtype)
      114    0.000    0.000    0.000    0.000 common.py:1470(is_extension_array_dtype)
       23    0.000    0.000    0.000    0.000 common.py:1551(_is_dtype)
        2    0.000    0.000    0.000    0.000 common.py:157(ensure_python_int)
       49    0.000    0.000    0.000    0.000 common.py:1575(get_dtype)
       77    0.000    0.000    0.000    0.000 common.py:1610(_is_dtype_type)
        1    0.000    0.000    0.000    0.000 common.py:170(all_none)
        2    0.000    0.000    0.000    0.000 common.py:174(<genexpr>)
       19    0.000    0.000    0.000    0.000 common.py:1743(validate_all_hashable)
       38    0.000    0.000    0.000    0.000 common.py:1762(<genexpr>)
       28    0.000    0.000    0.000    0.000 common.py:1769(pandas_dtype)
       59    0.000    0.000    0.000    0.000 common.py:185(classes)
       59    0.000    0.000    0.000    0.000 common.py:187(<lambda>)
       18    0.000    0.000    0.000    0.000 common.py:190(classes_and_not_datetimelike)
       18    0.000    0.000    0.000    0.000 common.py:195(<lambda>)
        6    0.000    0.000    0.000    0.000 common.py:198(asarray_tuplesafe)
       42    0.000    0.000    0.000    0.000 common.py:201(is_object_dtype)
       26    0.000    0.000    0.000    0.000 common.py:231(is_sparse)
        7    0.000    0.000    0.000    0.000 common.py:254(maybe_iterable_to_list)
        7    0.000    0.000    0.000    0.000 common.py:317(apply_if_callable)
        3    0.000    0.000    0.000    0.000 common.py:355(is_datetime64_dtype)
       36    0.000    0.000    0.000    0.000 common.py:388(is_datetime64tz_dtype)
       17    0.000    0.000    0.000    0.000 common.py:429(is_timedelta64_dtype)
       43    0.000    0.000    0.000    0.000 common.py:463(is_period_dtype)
       43    0.000    0.000    0.000    0.000 common.py:499(is_interval_dtype)
        1    0.000    0.000    0.000    0.000 common.py:50(new_method)
       46    0.000    0.000    0.000    0.000 common.py:537(is_categorical_dtype)
       18    0.000    0.000    0.000    0.000 common.py:573(is_string_dtype)
        8    0.000    0.000    0.000    0.000 common.py:602(condition)
        5    0.000    0.000    0.000    0.000 common.py:605(is_excluded_dtype)
       20    0.000    0.000    0.000    0.000 common.py:610(<genexpr>)
       10    0.000    0.000    0.000    0.000 common.py:615(is_dtype_equal)
        1    0.000    0.000    0.000    0.000 common.py:70(get_op_result_name)
        8    0.000    0.000    0.000    0.000 common.py:703(is_integer_dtype)
        4    0.000    0.000    0.000    0.000 common.py:75(is_bool_indexer)
        4    0.000    0.000    0.000    0.000 common.py:757(is_signed_integer_dtype)
        4    0.000    0.000    0.000    0.000 common.py:813(is_unsigned_integer_dtype)
       19    0.000    0.000    0.000    0.000 common.py:912(is_datetime64_any_dtype)
        1    0.000    0.000    0.001    0.001 construction.py:241(init_dict)
        1    0.000    0.000    0.000    0.000 construction.py:278(<listcomp>)
        1    0.000    0.000    0.000    0.000 construction.py:281(<listcomp>)
        1    0.000    0.000    0.000    0.000 construction.py:284(<listcomp>)
        1    0.000    0.000    0.000    0.000 construction.py:333(_homogenize)
       26    0.000    0.000    0.000    0.000 construction.py:354(extract_array)
        1    0.000    0.000    0.000    0.000 construction.py:364(extract_index)
        1    0.000    0.000    0.000    0.000 construction.py:405(ensure_wrapped_if_datetimelike)
       12    0.000    0.000    0.001    0.000 construction.py:423(sanitize_array)
        5    0.000    0.000    0.000    0.000 construction.py:554(_try_cast)
        5    0.000    0.000    0.000    0.000 construction.py:612(is_empty_data)
        1    0.000    0.000    0.001    0.001 construction.py:62(arrays_to_mgr)
        1    0.000    0.000    0.000    0.000 dispatch.py:11(should_extension_dispatch)
        2    0.000    0.000    0.000    0.000 dtype.py:187(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:1078(construct_from_string)
       37    0.000    0.000    0.000    0.000 dtypes.py:1132(is_dtype)
        2    0.000    0.000    0.000    0.000 dtypes.py:277(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:711(construct_from_string)
        2    0.000    0.000    0.000    0.000 dtypes.py:870(construct_from_string)
       37    0.000    0.000    0.000    0.000 dtypes.py:923(is_dtype)
        1    0.000    0.000    0.000    0.000 expressions.py:187(_has_bool_dtype)
        1    0.000    0.000    0.000    0.000 expressions.py:196(_bool_arith_check)
        1    0.000    0.000    0.000    0.000 expressions.py:218(evaluate)
        1    0.000    0.000    0.000    0.000 expressions.py:62(_evaluate_standard)
       17    0.000    0.000    0.000    0.000 flags.py:47(__init__)
       12    0.000    0.000    0.000    0.000 flags.py:51(allows_duplicate_labels)
       12    0.000    0.000    0.000    0.000 flags.py:83(allows_duplicate_labels)
        3    0.000    0.000    0.000    0.000 frame.py:1158(__len__)
        1    0.000    0.000    0.000    0.000 frame.py:2934(_ixs)
        7    0.000    0.000    0.000    0.000 frame.py:2972(_get_column_array)
        8    0.000    0.000    0.000    0.000 frame.py:2979(_iter_column_arrays)
        2    0.000    0.000    0.000    0.000 frame.py:2987(__getitem__)
        2    0.000    0.000    0.000    0.000 frame.py:3147(__setitem__)
        2    0.000    0.000    0.000    0.000 frame.py:3231(_set_item)
        2    0.000    0.000    0.000    0.000 frame.py:3284(_ensure_valid_index)
        2    0.000    0.000    0.000    0.000 frame.py:3306(_box_col_values)
        2    0.000    0.000    0.000    0.000 frame.py:3833(_sanitize_column)
        2    0.000    0.000    0.000    0.000 frame.py:3853(reindexer)
        1    0.000    0.000    0.000    0.000 frame.py:4514(replace)
        5    0.000    0.000    0.000    0.000 frame.py:482(_constructor)
        6    0.000    0.000    0.001    0.000 frame.py:502(__init__)
        1    0.000    0.000    0.000    0.000 frame.py:5027(isna)
        1    0.000    0.000    0.003    0.003 frame.py:5044(dropna)
        2    0.000    0.000    0.000    0.000 frame.py:645(shape)
        1    0.000    0.000    0.002    0.002 frame.py:8628(count)
        1    0.000    0.000    0.001    0.001 frame.py:8777(_reduce)
        1    0.000    0.000    0.000    0.000 frame.py:8793(<listcomp>)
        1    0.000    0.000    0.000    0.000 frame.py:8796(<listcomp>)
        3    0.000    0.000    0.000    0.000 frame.py:8819(blk_func)
        1    0.000    0.000    0.000    0.000 frame.py:9086(_get_agg_axis)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1000(_argsort_dispatcher)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:1004(argsort)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:2907(_prod_dispatcher)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:2912(prod)
        5    0.000    0.000    0.000    0.000 fromnumeric.py:3102(_ndim_dispatcher)
        5    0.000    0.000    0.000    0.000 fromnumeric.py:3106(ndim)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:52(_wrapfunc)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:70(_wrapreduction)
        2    0.000    0.000    0.000    0.000 fromnumeric.py:71(<dictcomp>)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:840(_sort_dispatcher)
        1    0.000    0.000    0.000    0.000 fromnumeric.py:844(sort)
        2    0.000    0.000    0.000    0.000 function.py:45(__call__)
        4    0.000    0.000    0.000    0.000 function_base.py:4306(_delete_dispatcher)
        4    0.000    0.000    0.000    0.000 function_base.py:4310(delete)
        1    0.000    0.000    0.000    0.000 g1version16.py:27(YoungPause)
        1    0.000    0.000    0.000    0.000 g1version16.py:314(lineMetadata)
        1    0.015    0.015    3.962    3.962 g1version16.py:355(manyMatch_LineSearch)
        1    0.000    0.000    0.000    0.000 g1version16.py:366(<listcomp>)
        1    0.000    0.000    0.001    0.001 generic.py:10747(_min_count_stat_function)
        1    0.000    0.000    0.001    0.001 generic.py:10782(sum)
        1    0.000    0.000    0.001    0.001 generic.py:11051(sum)
        1    0.000    0.000    0.000    0.000 generic.py:1430(__invert__)
       17    0.000    0.000    0.000    0.000 generic.py:188(__init__)
       12    0.000    0.000    0.000    0.000 generic.py:227(attrs)
       24    0.000    0.000    0.000    0.000 generic.py:248(flags)
      706    0.000    0.000    0.000    0.000 generic.py:30(_check)
        2    0.000    0.000    0.000    0.000 generic.py:340(_validate_dtype)
        2    0.000    0.000    0.000    0.000 generic.py:3409(_set_as_cached)
        2    0.000    0.000    0.000    0.000 generic.py:3447(_maybe_update_cacher)
        5    0.000    0.000    0.000    0.000 generic.py:3485(_clear_item_cache)
        1    0.000    0.000    0.000    0.000 generic.py:3492(take)
        1    0.000    0.000    0.000    0.000 generic.py:3591(_take_with_is_copy)
        2    0.000    0.000    0.000    0.000 generic.py:3783(_get_item_cache)
        2    0.000    0.000    0.000    0.000 generic.py:3820(_iset_item)
        2    0.000    0.000    0.000    0.000 generic.py:3824(_set_item)
        1    0.000    0.000    0.000    0.000 generic.py:3834(_set_is_copy)
        4    0.000    0.000    0.000    0.000 generic.py:3863(_check_setitem_copy)
        2    0.000    0.000    0.000    0.000 generic.py:4216(_update_inplace)
       11    0.000    0.000    0.000    0.000 generic.py:456(_get_axis_number)
        6    0.000    0.000    0.000    0.000 generic.py:470(_get_axis)
        1    0.000    0.000    0.000    0.000 generic.py:476(_get_block_manager_axis)
       12    0.000    0.000    0.000    0.000 generic.py:5411(__finalize__)
       19    0.000    0.000    0.000    0.000 generic.py:5449(__getattr__)
        3    0.000    0.000    0.000    0.000 generic.py:545(_info_axis)
       21    0.000    0.000    0.000    0.000 generic.py:5467(__setattr__)
        2    0.000    0.000    0.000    0.000 generic.py:5522(_protect_consolidate)
        2    0.000    0.000    0.000    0.000 generic.py:5534(_consolidate_inplace)
        2    0.000    0.000    0.000    0.000 generic.py:5538(f)
        1    0.000    0.000    0.001    0.001 generic.py:5557(_is_mixed_type)
        1    0.000    0.000    0.000    0.000 generic.py:5680(dtypes)
        3    0.000    0.000    0.000    0.000 generic.py:5724(astype)
        2    0.000    0.000    0.000    0.000 generic.py:592(size)
        1    0.000    0.000    0.000    0.000 generic.py:6489(replace)
        1    0.000    0.000    0.000    0.000 indexers.py:225(maybe_convert_indices)
        2    0.000    0.000    0.000    0.000 indexers.py:363(check_array_indexer)
        1    0.000    0.000    0.000    0.000 indexers.py:52(is_list_like_indexer)
        1    0.000    0.000    0.000    0.000 indexing.py:103(iloc)
        1    0.000    0.000    0.001    0.001 indexing.py:1092(_getitem_axis)
        1    0.000    0.000    0.000    0.000 indexing.py:1426(_validate_integer)
        1    0.000    0.000    0.000    0.000 indexing.py:1479(_getitem_axis)
        2    0.000    0.000    0.000    0.000 indexing.py:2204(convert_to_index_sliceable)
        2    0.000    0.000    0.000    0.000 indexing.py:2238(check_bool_indexer)
        1    0.000    0.000    0.000    0.000 indexing.py:240(loc)
        1    0.000    0.000    0.000    0.000 indexing.py:602(__call__)
        2    0.000    0.000    0.001    0.000 indexing.py:882(__getitem__)
        1    0.000    0.000    0.001    0.001 indexing.py:909(_getbool_axis)
        1    0.000    0.000    0.000    0.000 inference.py:134(is_re)
        8    0.000    0.000    0.000    0.000 inference.py:185(is_array_like)
        7    0.000    0.000    0.000    0.000 inference.py:263(is_dict_like)
       16    0.000    0.000    0.000    0.000 inference.py:289(<genexpr>)
       39    0.000    0.000    0.000    0.000 inference.py:322(is_hashable)
        3    0.000    0.000    0.000    0.000 inspect.py:73(isclass)
        8    0.000    0.000    0.000    0.000 iostream.py:195(schedule)
        6    0.000    0.000    0.000    0.000 iostream.py:308(_is_master_process)
        6    0.000    0.000    0.000    0.000 iostream.py:321(_schedule_flush)
        6    0.000    0.000    0.000    0.000 iostream.py:384(write)
        8    0.000    0.000    0.000    0.000 iostream.py:91(_event_pipe)
        7    0.000    0.000    0.000    0.000 managers.py:1013(iget_values)
        2    0.000    0.000    0.000    0.000 managers.py:1057(iset)
        2    0.000    0.000    0.000    0.000 managers.py:1085(value_getitem)
        7    0.000    0.000    0.000    0.000 managers.py:126(__init__)
        1    0.000    0.000    0.000    0.000 managers.py:1260(reindex_indexer)
        7    0.000    0.000    0.000    0.000 managers.py:132(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:1327(_slice_take_blocks_ax0)
        1    0.000    0.000    0.000    0.000 managers.py:1454(take)
        5    0.000    0.000    0.000    0.000 managers.py:150(from_blocks)
       11    0.000    0.000    0.000    0.000 managers.py:1545(__init__)
        3    0.000    0.000    0.000    0.000 managers.py:1566(from_blocks)
       13    0.000    0.000    0.000    0.000 managers.py:157(blknos)
        5    0.000    0.000    0.000    0.000 managers.py:1577(from_array)
       19    0.000    0.000    0.000    0.000 managers.py:1588(_block)
        1    0.000    0.000    0.000    0.000 managers.py:1602(get_slice)
        1    0.000    0.000    0.000    0.000 managers.py:1611(index)
       10    0.000    0.000    0.000    0.000 managers.py:1615(dtype)
        5    0.000    0.000    0.000    0.000 managers.py:1626(internal_values)
        1    0.000    0.000    0.000    0.000 managers.py:1690(create_block_manager_from_arrays)
        3    0.000    0.000    0.000    0.000 managers.py:1695(<genexpr>)
        1    0.000    0.000    0.000    0.000 managers.py:1699(<listcomp>)
       12    0.000    0.000    0.000    0.000 managers.py:173(blklocs)
        1    0.000    0.000    0.000    0.000 managers.py:1733(_form_blocks)
        1    0.000    0.000    0.000    0.000 managers.py:1829(_simple_blockify)
        1    0.000    0.000    0.000    0.000 managers.py:1844(_multi_blockify)
        1    0.000    0.000    0.000    0.000 managers.py:1847(<lambda>)
        2    0.000    0.000    0.000    0.000 managers.py:1860(_stack_arrays)
        7    0.000    0.000    0.000    0.000 managers.py:1863(_asarray_compat)
        2    0.000    0.000    0.000    0.000 managers.py:1869(_shape_compat)
        1    0.000    0.000    0.000    0.000 managers.py:1887(_interleaved_dtype)
        1    0.000    0.000    0.000    0.000 managers.py:1903(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:1906(_consolidate)
        8    0.000    0.000    0.000    0.000 managers.py:1911(<lambda>)
        3    0.000    0.000    0.000    0.000 managers.py:1923(_merge_blocks)
        1    0.000    0.000    0.000    0.000 managers.py:1938(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:1939(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:1958(_preprocess_slice_or_indexer)
       15    0.000    0.000    0.000    0.000 managers.py:206(shape)
       45    0.000    0.000    0.000    0.000 managers.py:208(<genexpr>)
       27    0.000    0.000    0.000    0.000 managers.py:210(ndim)
        2    0.000    0.000    0.000    0.000 managers.py:227(is_single_block)
        4    0.000    0.000    0.000    0.000 managers.py:232(_rebuild_blknos_and_blklocs)
        4    0.000    0.000    0.000    0.000 managers.py:253(items)
        1    0.000    0.000    0.000    0.000 managers.py:257(get_dtypes)
        1    0.000    0.000    0.000    0.000 managers.py:258(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:303(__len__)
        2    0.000    0.000    0.000    0.000 managers.py:318(_verify_integrity)
        8    0.000    0.000    0.000    0.000 managers.py:320(<genexpr>)
        1    0.000    0.000    0.001    0.001 managers.py:331(reduce)
        1    0.000    0.000    0.000    0.000 managers.py:360(<listcomp>)
        6    0.000    0.000    0.001    0.000 managers.py:376(apply)
        6    0.000    0.000    0.000    0.000 managers.py:405(<dictcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:545(isna)
        3    0.000    0.000    0.000    0.000 managers.py:628(astype)
        1    0.000    0.000    0.000    0.000 managers.py:648(replace)
        6    0.000    0.000    0.000    0.000 managers.py:681(is_consolidated)
        4    0.000    0.000    0.000    0.000 managers.py:689(_consolidate_check)
        4    0.000    0.000    0.000    0.000 managers.py:690(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:698(any_extension_types)
        4    0.000    0.000    0.000    0.000 managers.py:701(<genexpr>)
        1    0.000    0.000    0.000    0.000 managers.py:752(_combine)
        1    0.000    0.000    0.000    0.000 managers.py:760(<listcomp>)
        1    0.000    0.000    0.000    0.000 managers.py:940(fast_xs)
        2    0.000    0.000    0.000    0.000 managers.py:975(consolidate)
        4    0.000    0.000    0.000    0.000 managers.py:991(_consolidate_inplace)
        2    0.000    0.000    0.000    0.000 managers.py:998(iget)
      9/6    0.000    0.000    0.000    0.000 missing.py:133(_isna)
        1    0.000    0.000    0.000    0.000 missing.py:136(dispatch_fill_zeros)
        5    0.000    0.000    0.000    0.000 missing.py:202(_isna_ndarraylike)
        3    0.000    0.000    0.000    0.000 missing.py:244(_isna_string_dtype)
        1    0.000    0.000    0.000    0.000 missing.py:26(mask_missing)
        2    0.000    0.000    0.001    0.000 missing.py:264(notna)
        2    0.000    0.000    0.000    0.000 missing.py:367(array_equivalent)
        2    0.000    0.000    0.000    0.000 missing.py:465(_array_equivalent_object)
      9/6    0.000    0.000    0.000    0.000 missing.py:50(isna)
        1    0.000    0.000    0.000    0.000 missing.py:582(remove_na_arraylike)
       13    0.000    0.000    0.000    0.000 multiarray.py:1054(copyto)
        6    0.000    0.000    0.000    0.000 multiarray.py:143(concatenate)
        2    0.000    0.000    0.000    0.000 multiarray.py:478(can_cast)
        3    0.000    0.000    0.000    0.000 nanops.py:1367(_maybe_null_out)
        3    0.000    0.000    0.000    0.000 nanops.py:1399(check_below_min_count)
        3    0.000    0.000    0.000    0.000 nanops.py:174(_get_fill_value)
        3    0.000    0.000    0.000    0.000 nanops.py:199(_maybe_get_mask)
        3    0.000    0.000    0.000    0.000 nanops.py:243(_get_values)
        3    0.000    0.000    0.000    0.000 nanops.py:330(_na_ok_dtype)
        3    0.000    0.000    0.000    0.000 nanops.py:379(new_func)
        3    0.000    0.000    0.000    0.000 nanops.py:518(nansum)
       12    0.000    0.000    0.000    0.000 nanops.py:59(check)
        3    0.000    0.000    0.000    0.000 nanops.py:63(_f)
       15    0.000    0.000    0.000    0.000 nanops.py:66(<genexpr>)
        4    0.000    0.000    0.000    0.000 numeric.py:148(ones)
        4    0.000    0.000    0.000    0.000 numeric.py:164(_is_all_dates)
        1    0.000    0.000    0.000    0.000 numeric.py:2388(_array_equal_dispatcher)
        1    0.000    0.000    0.000    0.000 numeric.py:2392(array_equal)
        9    0.000    0.000    0.000    0.000 numeric.py:288(full)
        1    0.000    0.000    0.000    0.000 numeric.py:78(_validate_dtype)
       34    0.000    0.000    0.000    0.000 numerictypes.py:285(issubclass_)
       17    0.000    0.000    0.000    0.000 numerictypes.py:359(issubdtype)
        3    0.000    0.000    0.000    0.000 numpy_.py:156(__init__)
        2    0.000    0.000    0.000    0.000 numpy_.py:202(__array__)
        1    0.000    0.000    0.000    0.000 numpy_.py:371(to_numpy)
        3    0.000    0.000    0.000    0.000 numpy_.py:41(__init__)
        1    0.000    0.000    0.000    0.000 parse_log.py:108(<dictcomp>)
        2    0.000    0.000    0.000    0.000 parse_log.py:173(__remove_non_numbers)
        1    0.001    0.001    3.978    3.978 parse_log.py:87(getPauses)
        1    0.000    0.000    0.000    0.000 range.py:133(_simple_new)
        2    0.000    0.000    0.000    0.000 range.py:474(equals)
       36    0.000    0.000    0.000    0.000 range.py:747(__len__)
        1    0.000    0.000    0.000    0.000 range.py:85(__new__)
    25000    0.010    0.000    3.936    0.000 re.py:198(search)
        2    0.000    0.000    0.000    0.000 re.py:203(sub)
    25002    0.008    0.000    0.012    0.000 re.py:289(_compile)
        1    0.000    0.000    0.000    0.000 series.py:1811(unique)
       11    0.000    0.000    0.001    0.000 series.py:238(__init__)
        1    0.000    0.000    0.000    0.000 series.py:2734(_construct_result)
        2    0.000    0.000    0.000    0.000 series.py:3834(map)
        7    0.000    0.000    0.000    0.000 series.py:422(_constructor)
        7    0.000    0.000    0.000    0.000 series.py:439(_set_axis)
       10    0.000    0.000    0.000    0.000 series.py:473(dtype)
       20    0.000    0.000    0.000    0.000 series.py:488(name)
        1    0.000    0.000    0.000    0.000 series.py:4969(_cmp_method)
       19    0.000    0.000    0.000    0.000 series.py:538(name)
        5    0.000    0.000    0.000    0.000 series.py:585(_values)
        3    0.000    0.000    0.000    0.000 series.py:620(array)
        2    0.000    0.000    0.000    0.000 series.py:721(__array__)
        1    0.000    0.000    0.000    0.000 series.py:839(__getitem__)
        1    0.000    0.000    0.000    0.000 series.py:935(_get_values)
        1    0.000    0.000    0.000    0.000 shape_base.py:208(_arrays_for_stack_dispatcher)
        1    0.000    0.000    0.000    0.000 shape_base.py:219(_vhstack_dispatcher)
        1    0.000    0.000    0.000    0.000 shape_base.py:223(vstack)
        3    0.000    0.000    0.000    0.000 shape_base.py:78(_atleast_2d_dispatcher)
        3    0.000    0.000    0.000    0.000 shape_base.py:82(atleast_2d)
        8    0.000    0.000    0.000    0.000 socket.py:438(send)
        8    0.000    0.000    0.000    0.000 threading.py:1039(_wait_for_tstate_lock)
        8    0.000    0.000    0.000    0.000 threading.py:1093(is_alive)
        8    0.000    0.000    0.000    0.000 threading.py:529(is_set)
        7    0.000    0.000    0.000    0.000 typing.py:1333(cast)
        6    0.000    0.000    0.000    0.000 typing.py:2020(new_type)
        1    0.000    0.000    0.000    0.000 typing.py:702(__instancecheck__)
        1    0.000    0.000    0.000    0.000 typing.py:831(__subclasscheck__)
        1    0.000    0.000    0.000    0.000 warnings.py:165(simplefilter)
        1    0.000    0.000    0.000    0.000 warnings.py:181(_add_filter)
        1    0.000    0.000    0.000    0.000 warnings.py:437(__init__)
        1    0.000    0.000    0.000    0.000 warnings.py:458(__enter__)
        1    0.000    0.000    0.000    0.000 warnings.py:477(__exit__)
        6    0.000    0.000    0.000    0.000 {built-in method __new__ of type object at 0x107ea4d48}
       60    0.000    0.000    0.000    0.000 {built-in method _abc._abc_instancecheck}
     1000    0.001    0.000    0.001    0.000 {built-in method _codecs.utf_8_decode}
        2    0.000    0.000    0.000    0.000 {built-in method _locale.nl_langinfo}
        1    0.000    0.000    0.000    0.000 {built-in method _operator.gt}
        3    0.000    0.000    0.000    0.000 {built-in method _operator.invert}
        3    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
       31    0.000    0.000    0.000    0.000 {built-in method builtins.all}
        9    0.000    0.000    0.000    0.000 {built-in method builtins.any}
       19    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
        1    0.000    0.000    3.979    3.979 {built-in method builtins.exec}
     1062    0.000    0.000    0.000    0.000 {built-in method builtins.getattr}
      104    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
       45    0.000    0.000    0.000    0.000 {built-in method builtins.hash}
26752/26750    0.005    0.000    0.005    0.000 {built-in method builtins.isinstance}
      471    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
25389/25312    0.002    0.000    0.002    0.000 {built-in method builtins.len}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.max}
        3    0.000    0.000    0.001    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 {built-in method builtins.sorted}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.sum}
        2    0.001    0.000    0.001    0.000 {built-in method io.open}
       16    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
    90/86    0.000    0.000    0.000    0.000 {built-in method numpy.array}
    39/33    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
        4    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       43    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
       44    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
       22    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        1    0.000    0.000    0.000    0.000 {built-in method numpy.zeros}
        2    0.000    0.000    0.000    0.000 {built-in method pandas._libs.lib.is_datetime_array}
        3    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.checknull}
        3    0.000    0.000    0.000    0.000 {built-in method pandas._libs.missing.isnaobj}
        6    0.000    0.000    0.000    0.000 {built-in method posix.getpid}
        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_io._IOBase' objects}
        8    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
        9    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
        8    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
       60    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'append' of 'pandas._libs.internals.BlockPlacement' objects}
        1    0.000    0.000    0.000    0.000 {method 'argsort' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
        5    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
        8    0.000    0.000    0.000    0.000 {method 'copy' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'delete' of 'pandas._libs.internals.BlockPlacement' objects}
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        5    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
        8    0.000    0.000    0.000    0.000 {method 'fill' of 'numpy.ndarray' objects}
       17    0.000    0.000    0.000    0.000 {method 'format' of 'str' objects}
        9    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
        4    0.000    0.000    0.000    0.000 {method 'get_loc' of 'pandas._libs.index.IndexEngine' objects}
        6    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
        1    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
        2    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'match' of 're.Pattern' objects}
        3    0.000    0.000    0.000    0.000 {method 'max' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
        7    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        2    0.015    0.008    0.017    0.009 {method 'readlines' of '_io._IOBase' objects}
       18    0.000    0.000    0.000    0.000 {method 'reduce' of 'numpy.ufunc' objects}
        1    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        6    0.000    0.000    0.000    0.000 {method 'reshape' of 'numpy.ndarray' objects}
    25002    3.914    0.000    3.914    0.000 {method 'search' of 're.Pattern' objects}
        1    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
        8    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {method 'sub' of 're.Pattern' objects}
        3    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 {method 'take' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 {method 'unique' of 'pandas._libs.hashtable.PyObjectHashTable' objects}
       12    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
        6    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_int64}
       13    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_object}
        2    0.000    0.000    0.000    0.000 {pandas._libs.algos.ensure_platform_int}
        2    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_1d_int64_int64}
        1    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_1d_object_object}
        1    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_2d_axis1_float64_float64}
        1    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_2d_axis1_int64_int64}
        1    0.000    0.000    0.000    0.000 {pandas._libs.algos.take_2d_axis1_object_object}
        3    0.000    0.000    0.000    0.000 {pandas._libs.internals.get_blkno_placements}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.array_equivalent_object}
        1    0.000    0.000    0.000    0.000 {pandas._libs.lib.get_reverse_indexer}
        6    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_datetimelike_array}
       11    0.000    0.000    0.000    0.000 {pandas._libs.lib.infer_dtype}
        8    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_bool}
       17    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_float}
        7    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_integer}
        5    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_iterator}
       43    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_list_like}
       37    0.000    0.000    0.000    0.000 {pandas._libs.lib.is_scalar}
        6    0.000    0.000    0.000    0.000 {pandas._libs.lib.item_from_zerodim}
        2    0.000    0.000    0.000    0.000 {pandas._libs.lib.map_infer}
        7    0.000    0.000    0.000    0.000 {pandas._libs.lib.maybe_convert_objects}